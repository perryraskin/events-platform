// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int       @id @default(autoincrement())
  dateCreated    DateTime  @default(now())
  issuer         String    @unique
  firstName      String
  lastName       String
  email          String?
  phone          String?
  imageUrl       String?
  EventsHosted   Event[]
  EventsInvited  Guest[]
  ThreadsPosted  Thread[]
  CommentsPosted Comment[]
}

model Event {
  id             Int            @id @default(autoincrement())
  dateCreated    DateTime       @default(now())
  clerkUserId    String?
  userId         Int?
  title          String
  dateTimeStart  DateTime?
  dateTimeEnd    DateTime?
  timeZone       String?
  price          Decimal        @default(0) @db.Decimal(10, 2)
  imageUrl       String?
  designImageUrl String?
  detailsText    String?
  detailsHtml    String?
  Host           User?          @relation(fields: [userId], references: [id])
  Guests         Guest[]
  Threads        Thread[]
  Comments       Comment[]
  Address        Address[]
  Settings       EventSettings?
  Invites        EventInvite[]
  locationUrl    String?
}

model EventInvite {
  id          Int      @id @default(autoincrement())
  dateCreated DateTime @default(now())
  eventId     Int?
  code        String?
  url         String?
  Event       Event?   @relation(fields: [eventId], references: [id])
  redeemed    Boolean  @default(false)
}

model EventSettings {
  id            Int      @id @default(autoincrement())
  dateCreated   DateTime @default(now())
  eventId       Int      @unique
  access        Int      @default(0)
  showGuestList Boolean  @default(true)
  allowComments Boolean  @default(true)
  Event         Event    @relation(fields: [eventId], references: [id])
}

model Address {
  id           Int      @id @default(autoincrement())
  dateCreated  DateTime @default(now())
  eventId      Int?
  locationName String?
  latitude     Decimal?
  longitude    Decimal?
  address1     String?
  address2     String?
  city         String?
  state        String?
  zip          String?
  country      String?
  Event        Event?   @relation(fields: [eventId], references: [id])
}

model Guest {
  id          Int      @id @default(autoincrement())
  dateCreated DateTime @default(now())
  eventId     Int?
  userId      Int?
  clerkUserId String?
  isHost      Boolean  @default(false)
  response    Int?     @default(0)
  Event       Event?   @relation(fields: [eventId], references: [id])
  User        User?    @relation(fields: [userId], references: [id])
}

model Thread {
  id          Int       @id @default(autoincrement())
  dateCreated DateTime  @default(now())
  eventId     Int?
  userId      Int?
  clerkUserId String?
  body        String?
  Event       Event?    @relation(fields: [eventId], references: [id])
  Author      User?     @relation(fields: [userId], references: [id])
  Comments    Comment[]
}

model Comment {
  id          Int      @id @default(autoincrement())
  dateCreated DateTime @default(now())
  eventId     Int?
  userId      Int?
  clerkUserId String?
  threadId    Int?
  isReply     Boolean  @default(false)
  body        String?
  Event       Event?   @relation(fields: [eventId], references: [id])
  Author      User?    @relation(fields: [userId], references: [id])
  Thread      Thread?  @relation(fields: [threadId], references: [id])
}
